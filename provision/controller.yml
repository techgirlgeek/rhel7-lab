---
- name: Install controller Node
  hosts: all
  gather_facts: true
  become: true

  tasks:
    - name: Modify /etc/sshd/sshd_config to disallow password login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#PasswordAuthentication(.*)$'
        line: 'PasswordAuthentication yes'

    - name: Enable firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: started

    - name: Add core packages to be a tftp server
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - git
          - httpd
          - syslinux-tftpboot
          - tftp-server
          - bind-utils
          - wget
          - dhcp-server
          - mlocate
          - network-scripts

    - name: Remove symlink for virtualboxes
      ansible.builtin.file:
        path: /etc/localtime
        state: absent

    - name: Set timezone for server
      community.general.timezone:
        name: America/Denver

    - name: Enable tftp port
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        state: enabled
        immediate: true
      loop:
        - dhcp
        - tftp

    - name: Create ifcfg-eth1 file
      ansible.builtin.copy:
        content: |
          NAME=eth1
          DEVICE=eth1
          BOOTPROTO=none
          ONBOOT=yes
          TYPE=Ethernet
          IPADDR=192.168.56.3
          GATEWAY=192.168.56.2
          NETMASK=255.255.255.0
          #DNS1=192.168.80.2
          IPV6=no
        dest: /etc/sysconfig/network-scripts/ifcfg-eth1
        owner: root
        group: root
        mode: '0644'

    - name: Enable vagrant machine to be a router for hosts on 192.168.80.0 network
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        sysctl_set: true
      loop:
        - net.ipv6.conf.all.disable_ipv6
        - net.ipv6.conf.default.disable_ipv6
        - net.ipv4.ip_forward

    - name: Restart eth1
      ansible.builtin.command: /sbin/ifup eth1
      register: eth1_info
      changed_when: eth1_info.rc != 0

    # - name: What is in the eth1_info
    #   debug:
    #     var: eth1_info.rc

    - name: Create dhpd.conf to serve dhcp on 192.168.80.0 Network
      ansible.builtin.copy:
        content: |
            option space pxelinux;
            option pxelinux.magic code 208 = string;
            option pxelinux.configfile code 209 = text;
            option pxelinux.pathprefix code 210 = text;
            option pxelinux.reboottime code 211 = unsigned integer 32;
            option architecture-type code 93 = unsigned integer 16;
            default-lease-time 600;
            max-lease-time 1200;
            subnet 10.0.2.0 netmask 255.255.255.0 {}
            subnet 192.168.80.0 netmask 255.255.255.0 {
              option routers 192.168.80.2;
              option domain-name-servers 192.168.1.1;
              range 192.168.80.21 192.168.80.23;
              class "pxeclients" {
                match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
                next-server 192.168.80.3;
                if option architecture-type = 00:07 {
                  filename "uefi/shim.efi";
                  } else {
                  filename "pxelinux/pxelinux.0";
                  } } }
        dest: /etc/dhcp/dhcpd.conf
        owner: root
        group: root
        mode: '0644'

    - name: Start tftp server
      ansible.builtin.systemd:
        name: tftp.socket
        enabled: true
        state: started

    - name: Enable and restart dhcpd
      ansible.builtin.systemd:
        name: dhcpd
        enabled: true
        state: restarted

    - name: Enable and restart sshd
      ansible.builtin.systemd:
        name: sshd
        state: restarted

    - name: Restart sshd
      ansible.builtin.systemd:
        name: dhcpd
        state: restarted

    - name: Create Ansible lab directory
      ansible.builtin.file:
        path: "/home/vagrant/ansible/group_vars/{{ item }}"
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'
      loop:
        - all
        - dev
        - uat
        - prod

    - name: Create Ansible lab vars.yml
      ansible.builtin.file:
        path: "/home/vagrant/ansible/group_vars/{{ item }}/vars.yml"
        state: touch
        owner: vagrant
        group: vagrant
        mode: '0755'
      loop:
        - all
        - dev
        - uat
        - prod

    - name: Add entries to group_vars/all/vars.yml file
      ansible.builtin.copy:
        content: |
          ansible_user: vagrant
          ansible_password: vagrant

        dest: /home/vagrant/ansible/group_vars/all/vars.yml
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Create lab inventory file
      ansible.builtin.copy:
        content: |
          [tower]
          server1.localdev

          [database]
          dbserver1.localdev

        dest: /home/vagrant/ansible/inventory
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Create lab ansible.cfg file
      ansible.builtin.copy:
        content: |
            [defaults]
            inventory = inventory
            gathering = explicit
            host_key_checking = false

            [ssh_connection]
            ssh_args = -C -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null

        dest: /home/vagrant/ansible/ansible.cfg
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Create host_vars dir
      ansible.builtin.file:
        path: /home/vagrant/ansible/host_vars
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'

    - name: Create host_vars vars files
      ansible.builtin.copy:
        content: |
            ansible_host: {{ item.ipaddr }}
        dest: "/home/vagrant/ansible/host_vars/{{ item.host }}.yml"
        owner: vagrant
        group: vagrant
        mode: '0644'
      loop:
        - { host: server1.localdev, ipaddr: 192.168.56.45 }
        - { host: dbserver1.localdev, ipaddr: 192.168.80.47 }
        # - { host: serverc, ipaddr: 192.168.80.23 }
